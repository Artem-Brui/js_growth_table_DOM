{"mappings":"A,S,E,C,C,C,E,C,A,M,G,E,E,M,A,G,C,E,E,M,A,E,I,I,E,E,E,A,M,G,E,E,I,C,C,E,C,C,C,E,C,O,C,CCGA,IAAM,EAAK,CACT,UAAW,SAAS,aAAa,CAAC,cAClC,UAAW,SAAS,aAAa,CAAC,UAAU,QAAQ,CAAC,EAAE,CACvD,aAAc,SAAS,aAAa,CAAC,eACrC,gBAAiB,SAAS,aAAa,CAAC,eACxC,gBAAiB,SAAS,aAAa,CAAC,kBACxC,mBAAoB,SAAS,aAAa,CAAC,iBAC7C,EAEM,EAAO,EAAG,SAAS,CAAC,QAAQ,CA2ClC,EAAG,SAAS,CAAC,gBAAgB,CAC3B,QACA,SAAC,CAFH,EAGI,GAAI,EAAE,MAAM,CAAC,SAAS,CAAC,QAAQ,CAAC,UAAW,K,GAKzC,AAjDN,SAAqB,CAAS,EAC5B,SAAS,EAAkB,CAAU,CAAE,CAAM,EAC3C,OAAQ,GACN,IAAK,MACH,IAAM,EAAe,CAAU,CAAC,EAAE,CAAC,SAAS,CAAC,CAAA,GAE7C,CAAU,CAAC,EAAE,CAAC,UAAU,CAAC,WAAW,CAAC,GACrC,KACF,KAAK,SACH,CAAU,CAAC,EAAE,CAAC,UAAU,CAAC,WAAW,CAAC,CAAU,CAAC,EAAE,CAEtD,CACF,CAEA,OAAQ,GACN,IAAK,aACH,EAAkB,EAAM,OACxB,KACF,KAAK,aACH,EAAkB,EAAM,UACxB,KACF,KAAK,gBACE,IAAA,EAAA,CAAA,EAAA,EAAA,CAAA,EAAA,EAAA,KAAA,E,G,CAAL,IAAA,IAAK,EAAA,EAAa,CAAA,CAAA,OAAA,QAAA,CAAA,GAAb,CAAA,CAAA,EAAA,AAAA,CAAA,EAAA,EAAA,IAAA,EAAA,EAAA,IAAA,AAAA,EAAA,EAAL,CAAA,EAAA,CAAK,IAAM,EAAN,EAAA,KAAA,CACH,EAAkB,EAAI,QAAQ,CAAE,M,C,C,M,E,CAD7B,EAAA,CAAA,EAAA,EAAA,C,Q,C,G,CAAA,GAAA,AAAA,MAAA,EAAA,MAAA,EAAA,EAAA,MAAA,E,Q,CAAA,GAAA,EAAA,MAAA,C,C,CAGL,KACF,KAAK,gBACE,IAAA,EAAA,CAAA,EAAA,EAAA,CAAA,EAAA,EAAA,KAAA,E,G,CAAL,IAAA,IAAK,EAAA,EAAa,CAAA,CAAA,OAAA,QAAA,CAAA,GAAb,CAAA,CAAA,EAAA,AAAA,CAAA,EAAA,EAAA,IAAA,EAAA,EAAA,IAAA,AAAA,EAAA,EAAL,CAAA,EAAA,CAAK,IAAM,EAAN,EAAA,KAAA,CACH,EAAkB,EAAI,QAAQ,CAAE,S,C,C,M,E,CAD7B,EAAA,CAAA,EAAA,EAAA,C,Q,C,G,CAAA,GAAA,AAAA,MAAA,EAAA,MAAA,EAAA,EAAA,MAAA,E,Q,CAAA,GAAA,EAAA,MAAA,C,C,CAIT,CACF,EAiBkB,AAJY,A,C,A,C,S,C,E,G,M,O,C,G,O,E,E,C,E,EAAG,EAAE,MAAM,CAAC,SAAS,G,A,S,C,E,G,A,a,O,Q,A,M,C,C,O,Q,C,E,A,M,C,C,a,C,O,M,I,C,E,E,I,A,S,C,C,C,E,G,G,G,A,U,O,E,O,E,E,K,G,I,E,O,S,C,Q,C,I,C,G,K,C,E,I,G,W,G,E,W,E,C,E,E,W,C,I,A,E,A,Q,G,A,Q,E,O,M,I,C,G,G,A,c,G,2C,I,C,G,O,E,E,K,G,E,I,A,W,M,A,U,wI,G,EAAE,MAAM,CACnD,SAAC,CADH,EACY,MAAA,AAAS,WAAT,C,EAGc,CAAC,EAAE,EAdjC,EAAG,YAAY,CAAC,QAAQ,CAAG,AAAgB,KAAhB,EAAK,MAAM,CACtC,EAAG,eAAe,CAAC,QAAQ,CAAG,AAAgB,IAAhB,EAAK,MAAM,CACzC,EAAG,eAAe,CAAC,QAAQ,CAAG,AAA4B,KAA5B,CAAI,CAAC,EAAE,CAAC,QAAQ,CAAC,MAAM,CACrD,EAAG,kBAAkB,CAAC,QAAQ,CAAG,AAA4B,IAA5B,CAAI,CAAC,EAAE,CAAC,QAAQ,CAAC,MAAM,AAatD,CACF,EACA,CAAA","sources":["<anon>","src/scripts/main.js"],"sourcesContent":["\"use strict\";\nfunction _array_like_to_array(arr, len) {\n    if (len == null || len > arr.length) len = arr.length;\n    for(var i = 0, arr2 = new Array(len); i < len; i++)arr2[i] = arr[i];\n    return arr2;\n}\nfunction _array_without_holes(arr) {\n    if (Array.isArray(arr)) return _array_like_to_array(arr);\n}\nfunction _iterable_to_array(iter) {\n    if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}\nfunction _non_iterable_spread() {\n    throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\nfunction _to_consumable_array(arr) {\n    return _array_without_holes(arr) || _iterable_to_array(arr) || _unsupported_iterable_to_array(arr) || _non_iterable_spread();\n}\nfunction _unsupported_iterable_to_array(o, minLen) {\n    if (!o) return;\n    if (typeof o === \"string\") return _array_like_to_array(o, minLen);\n    var n = Object.prototype.toString.call(o).slice(8, -1);\n    if (n === \"Object\" && o.constructor) n = o.constructor.name;\n    if (n === \"Map\" || n === \"Set\") return Array.from(n);\n    if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _array_like_to_array(o, minLen);\n}\n// write code here\nvar el = {\n    container: document.querySelector(\".container\"),\n    tableBody: document.querySelector(\".field\").children[0],\n    addRowButton: document.querySelector(\".append-row\"),\n    removeRowButton: document.querySelector(\".remove-row\"),\n    addColumnButton: document.querySelector(\".append-column\"),\n    removeColumnButton: document.querySelector(\".remove-column\")\n};\nvar rows = el.tableBody.children;\nfunction handleField(className) {\n    function throughCollection(collection, action) {\n        switch(action){\n            case \"add\":\n                var cloneElement = collection[0].cloneNode(true);\n                collection[0].parentNode.appendChild(cloneElement);\n                break;\n            case \"remove\":\n                collection[0].parentNode.removeChild(collection[0]);\n                break;\n        }\n    }\n    switch(className){\n        case \"append-row\":\n            throughCollection(rows, \"add\");\n            break;\n        case \"remove-row\":\n            throughCollection(rows, \"remove\");\n            break;\n        case \"append-column\":\n            var _iteratorNormalCompletion = true, _didIteratorError = false, _iteratorError = undefined;\n            try {\n                for(var _iterator = rows[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true){\n                    var row = _step.value;\n                    throughCollection(row.children, \"add\");\n                }\n            } catch (err) {\n                _didIteratorError = true;\n                _iteratorError = err;\n            } finally{\n                try {\n                    if (!_iteratorNormalCompletion && _iterator.return != null) {\n                        _iterator.return();\n                    }\n                } finally{\n                    if (_didIteratorError) {\n                        throw _iteratorError;\n                    }\n                }\n            }\n            break;\n        case \"remove-column\":\n            var _iteratorNormalCompletion1 = true, _didIteratorError1 = false, _iteratorError1 = undefined;\n            try {\n                for(var _iterator1 = rows[Symbol.iterator](), _step1; !(_iteratorNormalCompletion1 = (_step1 = _iterator1.next()).done); _iteratorNormalCompletion1 = true){\n                    var row1 = _step1.value;\n                    throughCollection(row1.children, \"remove\");\n                }\n            } catch (err) {\n                _didIteratorError1 = true;\n                _iteratorError1 = err;\n            } finally{\n                try {\n                    if (!_iteratorNormalCompletion1 && _iterator1.return != null) {\n                        _iterator1.return();\n                    }\n                } finally{\n                    if (_didIteratorError1) {\n                        throw _iteratorError1;\n                    }\n                }\n            }\n            break;\n    }\n}\nfunction handleButtonsByLimit() {\n    el.addRowButton.disabled = rows.length === 10;\n    el.removeRowButton.disabled = rows.length === 2;\n    el.addColumnButton.disabled = rows[0].children.length === 10;\n    el.removeColumnButton.disabled = rows[0].children.length === 2;\n}\nel.container.addEventListener(\"click\", function(e) {\n    if (e.target.classList.contains(\"button\")) {\n        var classForAction = _to_consumable_array(e.target.classList).filter(function(item) {\n            return item !== \"button\";\n        });\n        handleField(classForAction[0]);\n        handleButtonsByLimit();\n    }\n}, true);\n\n//# sourceMappingURL=index.c91bb122.js.map\n","'use strict';\n\n// write code here\nconst el = {\n  container: document.querySelector('.container'),\n  tableBody: document.querySelector('.field').children[0],\n  addRowButton: document.querySelector('.append-row'),\n  removeRowButton: document.querySelector('.remove-row'),\n  addColumnButton: document.querySelector('.append-column'),\n  removeColumnButton: document.querySelector('.remove-column'),\n};\n\nconst rows = el.tableBody.children;\n\nfunction handleField(className) {\n  function throughCollection(collection, action) {\n    switch (action) {\n      case 'add':\n        const cloneElement = collection[0].cloneNode(true);\n\n        collection[0].parentNode.appendChild(cloneElement);\n        break;\n      case 'remove':\n        collection[0].parentNode.removeChild(collection[0]);\n        break;\n    }\n  }\n\n  switch (className) {\n    case 'append-row':\n      throughCollection(rows, 'add');\n      break;\n    case 'remove-row':\n      throughCollection(rows, 'remove');\n      break;\n    case 'append-column':\n      for (const row of rows) {\n        throughCollection(row.children, 'add');\n      }\n      break;\n    case 'remove-column':\n      for (const row of rows) {\n        throughCollection(row.children, 'remove');\n      }\n      break;\n  }\n}\n\nfunction handleButtonsByLimit() {\n  el.addRowButton.disabled = rows.length === 10;\n  el.removeRowButton.disabled = rows.length === 2;\n  el.addColumnButton.disabled = rows[0].children.length === 10;\n  el.removeColumnButton.disabled = rows[0].children.length === 2;\n}\n\nel.container.addEventListener(\n  'click',\n  (e) => {\n    if (e.target.classList.contains('button')) {\n      const classForAction = [...e.target.classList].filter(\n        (item) => item !== 'button',\n      );\n\n      handleField(classForAction[0]);\n      handleButtonsByLimit();\n    }\n  },\n  true,\n);\n"],"names":["_array_like_to_array","arr","len","length","i","arr2","Array","el","container","document","querySelector","tableBody","children","addRowButton","removeRowButton","addColumnButton","removeColumnButton","rows","addEventListener","e","target","classList","contains","handleField","className","throughCollection","collection","action","cloneElement","cloneNode","parentNode","appendChild","removeChild","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","Symbol","iterator","next","done","row","value","err","return","_iteratorNormalCompletion1","_didIteratorError1","_iteratorError1","_step1","_iterator1","row1","classForAction","_to_consumable_array","_array_without_holes","isArray","_iterable_to_array","iter","from","_unsupported_iterable_to_array","o","minLen","n","Object","prototype","toString","call","slice","constructor","name","test","_non_iterable_spread","TypeError","filter","item","disabled"],"version":3,"file":"index.c91bb122.js.map"}